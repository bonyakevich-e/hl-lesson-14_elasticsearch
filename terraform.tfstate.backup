{
  "version": 4,
  "terraform_version": "1.10.0",
  "serial": 339,
  "lineage": "fc39dbea-0919-c4b4-def6-de86863a5443",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "yandex_compute_image",
      "name": "ubuntu2404",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2025-01-27T11:01:56Z",
            "description": "Ubuntu 24.04 OsLogin",
            "family": "ubuntu-2404-lts-oslogin",
            "folder_id": "standard-images",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "id": "fd8hr27j6bkf6bd0tdsh",
            "image_id": "fd8hr27j6bkf6bd0tdsh",
            "kms_key_id": null,
            "labels": {},
            "min_disk_size": 10,
            "name": "ubuntu-2404-lts-oslogin-v20250127",
            "os_type": "linux",
            "pooled": true,
            "product_ids": [
              "f2e51dkhju4islhp1eps"
            ],
            "size": 5,
            "status": "ready"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "yandex_vpc_network",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2024-11-08T10:25:44Z",
            "default_security_group_id": "enph8nvndmf6tmo7urh2",
            "description": "Auto-created network",
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "id": "enp014etv9tm4bcju6bq",
            "labels": {},
            "name": "default",
            "network_id": "enp014etv9tm4bcju6bq",
            "subnet_ids": [
              "e2lsbglh7iq9u6kfhn3o",
              "e9bri13lics7pf0i9vbq",
              "fl8c28ftrf5g7mdfkhl7"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "frontend-balancer-conf",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "upstream backend {\n    ip_hash;\n    #zone upstream-backend 10m;\n            server 10.16.0.5 fail_timeout=60s;\n            server 10.16.0.25 fail_timeout=60s;\n    }\n\nserver {\n        listen 80;\n        server_name otus.highload.com;\n        location / {\n                proxy_pass http://backend;\n                proxy_set_header Host $host;\n                proxy_connect_timeout 10s;\n        }\n}\n",
            "content_base64": null,
            "content_base64sha256": "J7ZFIvsF0hBX6sZ9X9uqtt5ISuU/WdhTPbAqwrFLOQE=",
            "content_base64sha512": "ehHDa38yfG+mjrUdBo62JQSy/gxuUgY2o/vE/hNbIe+uH7aiUC47f7IOwM+yhXnajb6oiaGKxKD1snE6wIjTzw==",
            "content_md5": "dcc9bf40c5e87302df714f1ed001ae3f",
            "content_sha1": "4fcfafd77f5f12964621b12d6ee0ec60dc93bf28",
            "content_sha256": "27b64522fb05d21057eac67d5fdbaab6de484ae53f59d8533db02ac2b14b3901",
            "content_sha512": "7a11c36b7f327c6fa68eb51d068eb62504b2fe0c6e520636a3fbc4fe135b21efae1fb6a2502e3b7fb20ec0cfb28579da8dbea889a18ac4a0f5b2713ac088d3cf",
            "directory_permission": "0777",
            "file_permission": "0644",
            "filename": "./templates/frontend-balancer.conf",
            "id": "4fcfafd77f5f12964621b12d6ee0ec60dc93bf28",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_compute_instance.backend",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "inventory",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "[database]\ndatabase ansible_host=158.160.89.204 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n\n[backend]\nbackend1 ansible_host=158.160.67.7 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\nbackend2 ansible_host=158.160.75.104 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n[frontend]\nnginx1 ansible_host=84.201.152.105 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\nnginx2 ansible_host=158.160.91.236 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n[storage]\nstorage ansible_host=158.160.9.155 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n\n[elasticsearch]\nelasticsearch ansible_host=158.160.87.225 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n\n",
            "content_base64": null,
            "content_base64sha256": "yLl032455SewDUPIJwfjvxPiynqU5MbkpGGh8FQjdwI=",
            "content_base64sha512": "wx15RgAw3WsQi1zTZqiwRkhYcj3f9y3gwZL16FIOQPYwLdgL9bi24YcutFBPJvF8NQvymWueGrDi+ItZDg9K3Q==",
            "content_md5": "acfa049cae897f546ff368858809f4bf",
            "content_sha1": "c59986faebe748ddbf15ea72139d9309d88f1233",
            "content_sha256": "c8b974df6e39e527b00d43c82707e3bf13e2ca7a94e4c6e4a461a1f054237702",
            "content_sha512": "c31d79460030dd6b108b5cd366a8b0464858723ddff72de0c192f5e8520e40f6302dd80bf5b8b6e1872eb4504f26f17c350bf2996b9e1ab0e2f88b590e0f4add",
            "directory_permission": "0777",
            "file_permission": "0644",
            "filename": "./hosts",
            "id": "c59986faebe748ddbf15ea72139d9309d88f1233",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_compute_disk.shared_disk",
            "yandex_compute_instance.backend",
            "yandex_compute_instance.database",
            "yandex_compute_instance.elasticsearch",
            "yandex_compute_instance.frontend",
            "yandex_compute_instance.storage",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "playbook_yml",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "---\n- hosts: all\n  remote_user: ubuntu\n  become: yes\n  gather_facts: no\n  tasks:\n  \n# ждем пока виртуальные машины придут в себя. иначе могу быть баги с утановкой пакетов  \n  - name: Pause for 2 minutes\n    ansible.builtin.pause:\n      minutes: 2\n\n  - name: Wait for system to become reachable\n    ansible.builtin.wait_for_connection:\n\n  - name: Gather facts manually\n    ansible.builtin.setup:\n  \n  - name: Set timezone\n    timezone:\n      name: Europe/Moscow\n  \n  - name: Add entries to hosts\n    copy:\n      dest: /etc/hosts\n      content: \"#\\n\n127.0.0.1\tlocalhost\\n\n10.16.0.5\tbackend1\\n\n10.16.0.25\tbackend2\\n\n10.16.0.8\tnginx1\\n\n10.16.0.6\tnginx2\\n\n10.16.0.17\tstorage\\n\n10.16.0.23\tdatabase\\n\n10.16.0.22\telasticsearch\\n\n\"\n\n# ================================= setup iscsi target ===============================\n- hosts: storage\n  remote_user: ubuntu\n  become: yes\n  tasks:\n \n  - name: Install targetcli-fb\n    apt:\n      name: targetcli-fb\n      state: present\n  \n  - name: Configure target using bash script\n    script: iscsi_target.bash\n\n# =============================== setup gfs2 on backend servers ======================\n\n- hosts: backend\n  remote_user: ubuntu\n  become: yes\n  vars:\n  - iqn_base: iqn.2024-12.otus-hl\n  tasks:\n  \n  - name: Install packages\n    apt:\n      name: \"{{ item }}\"\n      state: latest\n    with_items:\n    - pacemaker\n    - pcs\n    - gfs2-utils\n    - open-iscsi\n    - lvm2\n    - dlm-controld\n    - lvm2-lockd\n    - resource-agents-extra\n    - resource-agents-common\n    - resource-agents-base\n    - watchdog \n    - pcp-zeroconf\n    - fence-agents-scsi\n    - apache2\n\n# меняем iqn iscsi клиентов\n  - name: Change InitiatorName in initiatorname.iscsi\n    ansible.builtin.lineinfile:\n      path: /etc/iscsi/initiatorname.iscsi\n      regexp: '^InitiatorName='\n      line: InitiatorName=iqn.2024-12.otus-hl:backend.{{ inventory_hostname }}\n\n# настраиваем автоподключение iscsi диска при запуске системы\n  - name: Configure iscsi client to autoconnect after reboot\n    tags: set iscsi autoconnect\n    ansible.builtin.lineinfile:\n      path: /etc/iscsi/iscsid.conf\n      regexp: '^node.startup'\n      line: node.startup = automatic\n\n  - name: restart iscsid\n    service: \n      name: iscsid\n      state: restarted\n\n# подключаем iscsi диск на ноды\n  - name: Discover iscsi target\n    community.general.open_iscsi:\n      show_nodes: true\n      discover: true\n      portal: storage\n\n  - name: Connect to the target  \n    community.general.open_iscsi:\n      login: true\n      target: 'iqn.2024-12.otus-hl:storage.target00'\n\n# автозапуск и автоподключение iscsi диска при загрузке системы\n  - name: Start iscsi\n    service:\n      name: \"{{ item }}\"\n      state: started\n      enabled: yes\n    with_items:\n      - iscsi\n\n# по дефолту Pacemaker запускает свою службу под пользователем hacluster\n  - name: Set password for hacluster to '123'\n    user:\n      name: hacluster\n      password: $5$A55.Uz8o.y8MuGaf$w3axEzoOgSeGyJo3OE56a4Ki1ctGEWP1GMyU7tOVJu6\n\n# стартуем pcsd\n  - name: Start cluster services\n    service:\n      name: \"{{ item }}\"\n      state: started\n      enabled: yes\n    with_items:\n      - pcsd\n\n# аутентифицируем ноды, которые будут составлять наш кластер\n  - name: authorize among nodes\n    run_once: true\n    command:\n      cmd: /sbin/pcs host auth -u hacluster -p 123 backend1 backend2 \n      creates: /var/lib/pcsd/tokens\n\n# настраиваем кластер\n  - name: configure cluster\n    tags: set cluster\n    run_once: true\n    command:\n      cmd: pcs cluster setup backend --start --enable backend1 backend2 --force\n      \n\n# копируем fencing скрипт для мониторинга iscsi в watchdog.d\n  - name: copy fence_scsi_check script to watchdog.d directory\n    tags: copy fence_scsi_check\n    ansible.builtin.copy:\n      src: /usr/share/cluster/fence_scsi_check\n      dest: /etc/watchdog.d/\n      remote_src: yes\n\n# запускаем watchdog\n  - name: start watchdog\n    tags: start watchdog\n    ansible.builtin.service:\n      name: watchdog\n      state: started\n      enabled: yes\n\n# получаем wwn-идентификатор iscsi диска\n  - name: confirm iscsi disk ID\n    tags: wwn-id\n    run_once: true\n    ansible.builtin.shell: ls -l /dev/disk/by-id | grep sda | grep wwn | cut -d ' ' -f 10\n    register: wwn_id\n\n  - name: show wwn id\n    tags: wwn-id\n    run_once: true\n    ansible.builtin.debug: \n      msg: WWN-ID  {{wwn_id.stdout}}\n    \n\n# настраиваем fencing\n  - name: set fencing\n    tags: set fencing\n    run_once: true\n    ansible.builtin.command: \n      cmd: pcs stonith create scsi-shooter fence_scsi pcmk_host_list=\" backend1 backend2\" devices=/dev/disk/by-id/{{wwn_id.stdout}} meta provides=unfencing\n    \n# включаем поддержку lvmlockd\n  - name: uncomment use_lvmlockd in lvm.conf\n    tags: set use_lvmlockd\n    ansible.builtin.lineinfile:\n      dest: /etc/lvm/lvm.conf\n      regexp: '#\\s*use_lvmlockd = 0'\n      line: 'use_lvmlockd = 1'\n\n# устанавливаем [no-quorum-policy=freeze] на GFS2\n  - name: Freeze a no-quorum policy\n    tags: set no-quorum-policy\n    run_once: true\n    command: /sbin/pcs property set no-quorum-policy=freeze\n\n# Создаем ресурс controld\n  - name: create controld resource\n    tags: set controld\n    run_once: true\n    command: /sbin/pcs resource create dlm ocf:pacemaker:controld op monitor interval=30s on-fail=fence group locking --future\n    register: result\n    failed_when:\n      - result.rc != 0 and \"already exists\" not in result.stderr\n\n  - name: create clone of [locking] to activate it on all nodes in cluster\n    tags: set locking\n    run_once: true\n    command: pcs resource clone locking interleave=true\n\n# Создаем ресурс lvmlockd\n  - name: create lvmlockd resource\n    tags: set lvmlockd\n    run_once: true\n    command: /sbin/pcs resource create lvmlockdd ocf:heartbeat:lvmlockd op monitor interval=30s on-fail=fence group locking --future\n    register: result\n    failed_when:\n      - result.rc != 0 and \"already exists\" not in result.stderr\n\n  - name: wait 30 seconds\n    ansible.builtin.wait_for:\n      timeout: 30\n\n# создаем кластерный VG на iscsi диске\n  - name: create a PV and VG\n    tags: set vg\n    run_once: true\n    community.general.lvg:\n      pvs: /dev/sda\n      vg: vg01\n      vg_options: --shared\n\n# на всех нодах запускаем lock manager для iscsi диска\n  - name: start lock manager for shared volume\n    tags: set lockmanager\n    command: vgchange --lock-start vg01 \n\n# создаем LV \n  - name: create logical volume\n    tags: set lv\n    run_once: true\n    community.general.lvol:\n      vg: vg01\n      lv: lv01\n      size: 100%VG\n\n# создаем кластерную файловую систему gfs2 на только что созданном LV\n  - name: create a FS\n    tags: set fs\n    run_once: true\n    command: mkfs.gfs2 -j 2 -p lock_dlm -t backend:fs01 -O /dev/vg01/lv01\n    register: result\n    failed_when:\n    - result.rc != 0\n    - '\"Device or resource busy\" not in result.stderr'\n\n# создаем LVM-activate ресурс\n  - name: create LVM-activate resource\n    tags: set LVM-activate\n    run_once: true\n    command: pcs resource create shared_lv ocf:heartbeat:LVM-activate lvname=lv01 vgname=vg01 activation_mode=shared vg_access_mode=lvmlockd group shared_vg --future\n\n  - name: create clone of [LVM-activate]\n    tags: set LVM-activate\n    run_once: true\n    command: pcs resource clone shared_vg interleave=true\n\n# устанавливаем порядок запуска ресурсов\n  - name: set that [shared_vg] and [locking] start on a same node\n    tags: set constraint\n    run_once: true\n    command: pcs constraint colocation add shared_vg-clone with locking-clone\n    register: result\n    failed_when:\n      - result.rc != 0 and \"already exists\" not in result.stderr\n\n# создаем Filesystem ресурс\n  - name: create Filesystem resource\n    tags: create filesystem resource\n    run_once: true\n    command: pcs resource create shared_fs ocf:heartbeat:Filesystem device=\"/dev/vg01/lv01\" directory=\"/var/www\" fstype=\"gfs2\" options=noatime op monitor interval=10s on-fail=fence group shared_vg --future\n\n  - name: Pause for 20 seconds\n    ansible.builtin.pause:\n      seconds: 20\n\n# =============================== setup web on backend servers ======================\n\n- hosts: backend\n  tags: prepare backend for web hosting\n  remote_user: ubuntu\n  become: yes\n  tasks:\n\n  - name: install prerequisites\n    ansible.builtin.apt:\n      name:\n        - libapache2-mod-php\n        - php-gd\n        - php-mysql\n        - php-curl\n        - php-mbstring\n        - php-intl\n        - php-gmp\n        - php-bcmath\n        - php-xml\n        - php-imagick\n        - php-zip\n        - mariadb-client\n      state: present\n      update_cache: true\n    notify: restart apache2\n\n  - name: Enable recommended apache modules\n    tags: enable_apache2_modules_web1\n    community.general.apache2_module:\n      state: present\n      name: \"{{ item }}\" \n    with_items:\n      - rewrite\n      - headers\n      - env\n      - dir\n      - mime\n    notify: restart apache2\n  \n  - name: enable apache2 service\n    ansible.builtin.service:\n      name: apache2\n      enabled: true\n\n  - name: modify apache2.conf\n    ansible.builtin.template:\n      src: templates/apache2.conf\n      dest: /etc/apache2/apache2.conf\n    notify:\n      - restart apache2\n\n  - name: add vhost for nextcloud\n    ansible.builtin.template:\n      src: nextcloud.conf.j2\n      dest: /etc/apache2/sites-available/nextcloud.conf\n    notify:\n      - enable nextcloud vhost\n      - restart apache2\n\n  handlers:\n  - name: enable nextcloud vhost\n    ansible.builtin.shell: /usr/sbin/a2ensite nextcloud.conf\n\n  - name: restart apache2\n    ansible.builtin.service:\n      name: apache2\n      state: restarted\n\n# =============================== setup Nextcloud  ======================\n\n- hosts: backend1\n  tags: setup nextcloud\n  remote_user: ubuntu\n  become: yes\n  tasks:\n\n  - name: Extact nextcloud-30.0.4.tar.bz2 into storage directory\n    ansible.builtin.unarchive:\n      src: https://cloud.baltbereg.com/index.php/s/K7gXPYBEpc9Ygkw/download/nextcloud-30.0.4.tar.bz2\n      dest: /var/www\n      remote_src: yes\n\n  - name: change nextcloud files' owner\n    ansible.builtin.file:\n      path: /var/www/nextcloud\n      state: directory\n      recurse: yes\n      owner: www-data\n      group: www-data\n\n# ============================ setup database MariaDB ===================\n\n- hosts: database\n  tags: setup database\n  remote_user: ubuntu\n  become: yes\n  tasks:\n\n  - name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)\n    community.crypto.openssh_keypair:\n      path: /root/.ssh/id_rsa\n\n  - name: Install pip\n    ansible.builtin.apt:\n      name: python3-pip\n      state: present\n      update_cache: true\n\n  - name: Install PyMySQL\n    pip:\n      name: pymysql\n      state: present\n      break_system_packages: true\n\n  - name: install mariadb\n    ansible.builtin.apt:\n      name:\n        - mariadb-server\n        - mariadb-backup\n        - mariadb-client\n      state: present\n      update_cache: true\n\n  - name: enable mariadb\n    ansible.builtin.service:\n      name: mariadb\n      enabled: true\n\n  - name: copy mariadb settings file\n    ansible.builtin.template:\n      src: 50-server.cnf.j2\n      dest: /etc/mysql/mariadb.conf.d/50-server.cnf\n      mode: '0600'\n    notify: restart mariadb\n\n  - name: flush handlers\n    meta: flush_handlers\n\n  - name: Check if mysql root password was not set\n    shell: \u003e\n      mysql -u root\n      -h localhost\n      -e \"quit\"\n    changed_when: false\n    ignore_errors: true\n    register: check_passwd_root\n\n  - name: Set MariaDB root password\n    community.mysql.mysql_user:\n      name: root\n      password: OtusHL\n      login_user: root\n      login_unix_socket: \"/run/mysqld/mysqld.sock\"\n      state: present\n    when: check_passwd_root.rc == 0\n\n  - name: Removes all anonymous user accounts\n    community.mysql.mysql_user:\n      name: ''\n      host_all: true\n      state: absent\n      login_user: root\n      login_password: OtusHL\n    notify: flush privileges\n\n  - name: Remove test database\n    mysql_db:\n      login_user: \"root\"\n      login_password: OtusHL\n      db: \"test\"\n      state: absent\n    notify: flush privileges\n\n  - name: create nextcloud database\n    community.mysql.mysql_db:\n      name: nextcloud\n      encoding: utf8mb4\n      collation: utf8mb4_general_ci\n      state: present\n      login_user: root\n      login_password: OtusHL\n\n  - name: create nextcloud user\n    tags: create_nextcloud_user\n    community.mysql.mysql_user:\n      name: nextcloud\n      password: OtusHL\n      priv: 'nextcloud.*:ALL'\n      host: '%'\n      login_user: root\n      login_password: OtusHL\n      state: present\n    notify: flush privileges\n\n  handlers:\n  - name: flush privileges\n    command: mysql -u root -pOtusHL -e \"FLUSH PRIVILEGES\"\n\n  - name: restart mariadb\n    ansible.builtin.service:\n      name: mariadb\n      state: restarted\n\n# =========================== make Nextcloud initial setup ========================\n\n- hosts: backend1\n  tags: nextcloud init\n  remote_user: ubuntu\n  become: yes\n  tasks:  \n\n  - name: make initial configuration of Nextcloud\n    command: sudo -u www-data php occ  maintenance:install --database-host='database' --database='mysql' --database-name='nextcloud' --database-user='nextcloud' --database-pass='OtusHL' --admin-user='admin' --admin-pass='OtusHL'\n    args: \n      chdir: /var/www/nextcloud\n\n  - name: add trusted domains to nextcloud config.php\n    tags: add trusted domains\n    ansible.builtin.lineinfile:\n      path: /var/www/nextcloud/config/config.php\n      insertafter: 0 =\u003e 'localhost',\n      line: \"    1 =\u003e 'otus.highload.com',\"\n\n# ========================== setup fronend ===================================\n\n- hosts: frontend\n  tags: setup frontend\n  remote_user: ubuntu\n  become: yes\n  tasks: \n\n  - name: UnInstall angie\n    tags: uninstall angie\n    ansible.builtin.apt: \n      name: angie\n      state: absent\n      update_cache: true\n\n  - name: UnInstall angie-console-light\n    tags: uninstall angie console\n    ansible.builtin.apt: \n      name: angie-console-light\n      state: absent\n      update_cache: true\n\n  - name: Install nginx\n    tags: install nginx\n    ansible.builtin.apt: \n      name: nginx\n      state: present\n      update_cache: true\n\n\n  - name: Copy nginx config\n    tags: copy nginx config\n    ansible.builtin.copy:\n      src: 'templates/frontend-balancer.conf'\n      dest: '/etc/nginx/sites-enabled/frontend-balancer.conf'\n    notify: restart nginx\n\n  handlers: \n  - name: restart nginx\n    ansible.builtin.service:\n      name: nginx\n      state: restarted \n\n\n# ================== setup elasticsearch ==========================\n\n- hosts: elasticsearch\n  tags: set up elasticsearch\n  remote_user: ubuntu\n  become: yes\n  tasks:\n\n  - name: add yandex cloud elasticsearch mirror\n    tags: add yandex cloud elasticsearch mirror\n    shell: 'echo \"deb [trusted=yes] https://mirror.yandex.ru/mirrors/elastic/8/ stable main\" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list'\n\n  - name: install elasticsearch, kibana\n    tags: install elasticsearch kibana\n    ansible.builtin.apt:\n      name: \n        - elasticsearch\n        - kibana\n      state: present\n      update_cache: true\n\n  - name: Change elasticsearch cluster.name\n    tags: change cluster.name\n    ansible.builtin.lineinfile:\n      path: /etc/elasticsearch/elasticsearch.yml\n      regexp: '#cluster.name'\n      line: 'cluster.name: elasticsearch'\n\n  - name: Change elasticsearch network.host\n    tags: change network.host\n    ansible.builtin.lineinfile:\n      path: /etc/elasticsearch/elasticsearch.yml\n      regexp: '#network.host'\n      line: 'network.host: 0.0.0.0'  \n\n  - name: start and enable elasticsearch, kibana\n    tags: start and enable elasticsearch kibana\n    ansible.builtin.service:\n      name: \"{{ item }}\"\n      state: started\n      enabled: true\n    with_items:\n      - elasticsearch\n      - kibana\n\n  - name: change password for user \"elastic\"\n    tags: change elastic pass\n    shell: 'printf \"OtusHL\\nOtusHL\" | /usr/share/elasticsearch/bin/elasticsearch-reset-password -b -i -u elastic' \n\n  - name: change password for user \"kibana_system\"\n    tags: change kibana_system pass\n    shell: 'printf \"OtusHL\\nOtusHL\" | /usr/share/elasticsearch/bin/elasticsearch-reset-password -b -i -u kibana_system'\n\n  - name: copy certs to /etc/kibana\n    tags: copy certs to kibana\n    ansible.builtin.copy:\n      src: /etc/elasticsearch/certs\n      dest: /etc/kibana\n      owner: root\n      group: kibana\n      remote_src: yes\n\n  - name: copy kibana config\n    tags: copy kibana config\n    ansible.builtin.copy:\n      src: templates/elasticsearch/kibana.yml\n      dest: /etc/kibana\n      owner: root\n      group: kibana\n    notify: restart kibana\n  \n  handlers:\n  - name: restart kibana\n    tags: restart kibana\n    ansible.builtin.service:\n      name: kibana\n      state: restarted\n\n- hosts: frontend, backend, database\n  tags: set up filebeat on servers\n  remote_user: ubuntu\n  become: yes\n  tasks:\n\n  - name: Add yandex cloud elasticsearch mirror\n    tags: filebeat on servers step 1\n    shell: 'echo \"deb [trusted=yes] https://mirror.yandex.ru/mirrors/elastic/8/ stable main\" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list'\n\n  - name: Install filebeat\n    tags: filebeat on servers step 2\n    ansible.builtin.apt:\n      name: filebeat\n      state: present\n      update_cache: true\n\n  - name: Copy filebeat configuration\n    tags: filebeat on servers step 3\n    ansible.builtin.template:\n      src: templates/elasticsearch/filebeat.yml.j2\n      dest: /etc/filebeat/filebeat.yml\n\n  - name: Create filebeat certs directory\n    tags: filebeat on servers step 4\n    ansible.builtin.file:\n      path: /etc/filebeat/certs\n      state: directory\n\n  - name: fetch http_ca certificate from elasticsearch\n    tags: filebeat on servers step 5\n    delegate_to: elasticsearch\n    shell: cat /etc/elasticsearch/certs/http_ca.crt\n    register: http_ca\n\n  - name: Copy http_ca.crt from elasticsearch to filebeat\n    tags: filebeat on servers step 6\n    ansible.builtin.copy:\n      content: \"{{ http_ca.stdout }}\"\n      dest: /etc/filebeat/certs/http_ca.crt\n    \n  - name: Setup filebeat\n    tags: filebeat on servers step 7\n    run_once: true\n    command: filebeat setup -e\n    register: result\n    failed_when:\n      - result.rc != 0 and \"already exists\" not in result.stderr\n  \n  - name: start and enable filebeat\n    tags: filebeat on servers step 8\n    ansible.builtin.service:\n      name: filebeat\n      state: started\n      enabled: true\n\n\n\n",
            "content_base64": null,
            "content_base64sha256": "sBLpceQNMJPTK3rgYWcH/1MR3uGL/uTB7qqju6rNkJ0=",
            "content_base64sha512": "PgAysEVRoNobBkSYNfdhD+b1i/tY0fIgUdLaAggerg8kw1eggcsnyuxWw1ygmtkcqWeRuLiETkLyBOY736s0nA==",
            "content_md5": "58ef2154dbfced0835d3ba20dd0ed69c",
            "content_sha1": "6bac1257ec0aa32c43f745a455fd4a1a9dacfef7",
            "content_sha256": "b012e971e40d3093d32b7ae0616707ff5311dee18bfee4c1eeaaa3bbaacd909d",
            "content_sha512": "3e0032b04551a0da1b06449835f7610fe6f58bfb58d1f22051d2da02081eae0f24c357a081cb27caec56c35ca09ad91ca96791b8b8844e42f204e63bdfab349c",
            "directory_permission": "0777",
            "file_permission": "0644",
            "filename": "./playbook.yml",
            "id": "6bac1257ec0aa32c43f745a455fd4a1a9dacfef7",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_compute_disk.shared_disk",
            "yandex_compute_instance.backend",
            "yandex_compute_instance.database",
            "yandex_compute_instance.elasticsearch",
            "yandex_compute_instance.frontend",
            "yandex_compute_instance.storage",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "setup_iscsi_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/bash\n\ntargetcli \u003c\u003c EOF\n\ncd /backstores/block\ncreate disk01 /dev/vdb\n\ncd /iscsi\ncreate iqn.2024-12.otus-hl:storage.target00\n\ncd /iscsi/iqn.2024-12.otus-hl:storage.target00/tpg1/luns\ncreate /backstores/block/disk01 lun=1\n\ncd ..\nset attribute authentication=0\n\ncd acls/\ncreate iqn.2024-12.otus-hl:backend.backend1\ncreate iqn.2024-12.otus-hl:backend.backend2\nEOF",
            "content_base64": null,
            "content_base64sha256": "lnKaHRzyVzy8sjTuNC24W3SyM9c8AiNg8gP/jDOs6Ac=",
            "content_base64sha512": "WE+MvU8SbLvW3NwZsIs1pTph+6jrGfBqNO/2DmkqvtZgP044C5fSEMFyGkFNBSU5I+znS7VxrkjY1G6osB2/mw==",
            "content_md5": "49928d43d913a57aa57f6af87f5579be",
            "content_sha1": "92b999b9f54c66d661b0b6ef28f0ad9847d14d12",
            "content_sha256": "96729a1d1cf2573cbcb234ee342db85b74b233d73c022360f203ff8c33ace807",
            "content_sha512": "584f8cbd4f126cbbd6dcdc19b08b35a53a61fba8eb19f06a34eff60e692abed6603f4e380b97d210c1721a414d05253923ece74bb571ae48d8d46ea8b01dbf9b",
            "directory_permission": "0777",
            "file_permission": "0644",
            "filename": "./iscsi_target.bash",
            "id": "92b999b9f54c66d661b0b6ef28f0ad9847d14d12",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_compute_instance.backend",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_compute_disk",
      "name": "shared_disk",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_recreate": null,
            "block_size": 4096,
            "created_at": "2025-01-27T14:12:53Z",
            "description": "",
            "disk_placement_policy": [
              {
                "disk_placement_group_id": ""
              }
            ],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "id": "epdm56ui46fqh0gg6kr5",
            "image_id": "",
            "kms_key_id": null,
            "labels": null,
            "name": "shared-disk",
            "product_ids": [],
            "size": 5,
            "snapshot_id": "",
            "status": "ready",
            "timeouts": null,
            "type": "network-hdd",
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_compute_instance",
      "name": "backend",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "allow_recreate": null,
            "allow_stopping_for_update": null,
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "epddo0kdma0j4ng4obnd",
                "disk_id": "epddo0kdma0j4ng4obnd",
                "initialize_params": [
                  {
                    "block_size": 4096,
                    "description": "",
                    "image_id": "fd8hr27j6bkf6bd0tdsh",
                    "kms_key_id": "",
                    "name": "boot-disk-backend1",
                    "size": 10,
                    "snapshot_id": "",
                    "type": "network-hdd"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "created_at": "2025-01-27T14:12:54Z",
            "description": "",
            "filesystem": [],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "fqdn": "backend1.ru-central1.internal",
            "gpu_cluster_id": "",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "hostname": "backend1",
            "id": "epdk93g272js7v4tjb5e",
            "labels": null,
            "local_disk": [],
            "maintenance_grace_period": "",
            "maintenance_policy": null,
            "metadata": {
              "ssh-keys": "ubuntu:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsv6OblDNKcWCXVFwd7wFacShcXDYt/mqBrPConqp8f itbn@LearningMachine1\n"
            },
            "metadata_options": [
              {
                "aws_v1_http_endpoint": 1,
                "aws_v1_http_token": 2,
                "gce_http_endpoint": 1,
                "gce_http_token": 1
              }
            ],
            "name": "backend1",
            "network_acceleration_type": "standard",
            "network_interface": [
              {
                "dns_record": [],
                "index": 0,
                "ip_address": "10.16.0.5",
                "ipv4": true,
                "ipv6": false,
                "ipv6_address": "",
                "ipv6_dns_record": [],
                "mac_address": "d0:0d:14:48:e0:23",
                "nat": true,
                "nat_dns_record": [],
                "nat_ip_address": "158.160.67.7",
                "nat_ip_version": "IPV4",
                "security_group_ids": [],
                "subnet_id": "e2lovau8npu31d5jff8m"
              }
            ],
            "placement_policy": [
              {
                "host_affinity_rules": [],
                "placement_group_id": "",
                "placement_group_partition": 0
              }
            ],
            "platform_id": "standard-v1",
            "resources": [
              {
                "core_fraction": 100,
                "cores": 2,
                "gpus": 0,
                "memory": 2
              }
            ],
            "scheduling_policy": [
              {
                "preemptible": false
              }
            ],
            "secondary_disk": [],
            "service_account_id": "",
            "status": "running",
            "timeouts": null,
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_vpc_subnet.subnet01"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "allow_recreate": null,
            "allow_stopping_for_update": null,
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "epdpqgs0c39oimmjdjpv",
                "disk_id": "epdpqgs0c39oimmjdjpv",
                "initialize_params": [
                  {
                    "block_size": 4096,
                    "description": "",
                    "image_id": "fd8hr27j6bkf6bd0tdsh",
                    "kms_key_id": "",
                    "name": "boot-disk-backend2",
                    "size": 10,
                    "snapshot_id": "",
                    "type": "network-hdd"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "created_at": "2025-01-27T14:12:54Z",
            "description": "",
            "filesystem": [],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "fqdn": "backend2.ru-central1.internal",
            "gpu_cluster_id": "",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "hostname": "backend2",
            "id": "epdmvdh9dfceq2h2cu7g",
            "labels": null,
            "local_disk": [],
            "maintenance_grace_period": "",
            "maintenance_policy": null,
            "metadata": {
              "ssh-keys": "ubuntu:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsv6OblDNKcWCXVFwd7wFacShcXDYt/mqBrPConqp8f itbn@LearningMachine1\n"
            },
            "metadata_options": [
              {
                "aws_v1_http_endpoint": 1,
                "aws_v1_http_token": 2,
                "gce_http_endpoint": 1,
                "gce_http_token": 1
              }
            ],
            "name": "backend2",
            "network_acceleration_type": "standard",
            "network_interface": [
              {
                "dns_record": [],
                "index": 0,
                "ip_address": "10.16.0.25",
                "ipv4": true,
                "ipv6": false,
                "ipv6_address": "",
                "ipv6_dns_record": [],
                "mac_address": "d0:0d:16:fb:62:96",
                "nat": true,
                "nat_dns_record": [],
                "nat_ip_address": "158.160.75.104",
                "nat_ip_version": "IPV4",
                "security_group_ids": [],
                "subnet_id": "e2lovau8npu31d5jff8m"
              }
            ],
            "placement_policy": [
              {
                "host_affinity_rules": [],
                "placement_group_id": "",
                "placement_group_partition": 0
              }
            ],
            "platform_id": "standard-v1",
            "resources": [
              {
                "core_fraction": 100,
                "cores": 2,
                "gpus": 0,
                "memory": 2
              }
            ],
            "scheduling_policy": [
              {
                "preemptible": false
              }
            ],
            "secondary_disk": [],
            "service_account_id": "",
            "status": "running",
            "timeouts": null,
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_compute_instance",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow_recreate": null,
            "allow_stopping_for_update": null,
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "epd4fvskruc89nnok7dj",
                "disk_id": "epd4fvskruc89nnok7dj",
                "initialize_params": [
                  {
                    "block_size": 4096,
                    "description": "",
                    "image_id": "fd8hr27j6bkf6bd0tdsh",
                    "kms_key_id": "",
                    "name": "boot-disk-database",
                    "size": 10,
                    "snapshot_id": "",
                    "type": "network-hdd"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "created_at": "2025-01-27T14:12:54Z",
            "description": "",
            "filesystem": [],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "fqdn": "database.ru-central1.internal",
            "gpu_cluster_id": "",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "hostname": "database",
            "id": "epd5p1cvq81mc0gir287",
            "labels": null,
            "local_disk": [],
            "maintenance_grace_period": "",
            "maintenance_policy": null,
            "metadata": {
              "ssh-keys": "ubuntu:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsv6OblDNKcWCXVFwd7wFacShcXDYt/mqBrPConqp8f itbn@LearningMachine1\n"
            },
            "metadata_options": [
              {
                "aws_v1_http_endpoint": 1,
                "aws_v1_http_token": 2,
                "gce_http_endpoint": 1,
                "gce_http_token": 1
              }
            ],
            "name": "database",
            "network_acceleration_type": "standard",
            "network_interface": [
              {
                "dns_record": [],
                "index": 0,
                "ip_address": "10.16.0.23",
                "ipv4": true,
                "ipv6": false,
                "ipv6_address": "",
                "ipv6_dns_record": [],
                "mac_address": "d0:0d:5c:85:9f:d2",
                "nat": true,
                "nat_dns_record": [],
                "nat_ip_address": "158.160.89.204",
                "nat_ip_version": "IPV4",
                "security_group_ids": [],
                "subnet_id": "e2lovau8npu31d5jff8m"
              }
            ],
            "placement_policy": [
              {
                "host_affinity_rules": [],
                "placement_group_id": "",
                "placement_group_partition": 0
              }
            ],
            "platform_id": "standard-v1",
            "resources": [
              {
                "core_fraction": 100,
                "cores": 2,
                "gpus": 0,
                "memory": 2
              }
            ],
            "scheduling_policy": [
              {
                "preemptible": false
              }
            ],
            "secondary_disk": [],
            "service_account_id": "",
            "status": "running",
            "timeouts": null,
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_compute_instance",
      "name": "elasticsearch",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow_recreate": null,
            "allow_stopping_for_update": null,
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "epd20rj73c8c4hp3f8m3",
                "disk_id": "epd20rj73c8c4hp3f8m3",
                "initialize_params": [
                  {
                    "block_size": 4096,
                    "description": "",
                    "image_id": "fd8hr27j6bkf6bd0tdsh",
                    "kms_key_id": "",
                    "name": "boot-disk-elasticsearch",
                    "size": 10,
                    "snapshot_id": "",
                    "type": "network-hdd"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "created_at": "2025-01-27T14:12:54Z",
            "description": "",
            "filesystem": [],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "fqdn": "elasticsearch.ru-central1.internal",
            "gpu_cluster_id": "",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "hostname": "elasticsearch",
            "id": "epdtbpgss494vmqr0ebe",
            "labels": null,
            "local_disk": [],
            "maintenance_grace_period": "",
            "maintenance_policy": null,
            "metadata": {
              "ssh-keys": "ubuntu:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsv6OblDNKcWCXVFwd7wFacShcXDYt/mqBrPConqp8f itbn@LearningMachine1\n"
            },
            "metadata_options": [
              {
                "aws_v1_http_endpoint": 1,
                "aws_v1_http_token": 2,
                "gce_http_endpoint": 1,
                "gce_http_token": 1
              }
            ],
            "name": "elasticsearch",
            "network_acceleration_type": "standard",
            "network_interface": [
              {
                "dns_record": [],
                "index": 0,
                "ip_address": "10.16.0.22",
                "ipv4": true,
                "ipv6": false,
                "ipv6_address": "",
                "ipv6_dns_record": [],
                "mac_address": "d0:0d:1d:5e:61:ce",
                "nat": true,
                "nat_dns_record": [],
                "nat_ip_address": "158.160.87.225",
                "nat_ip_version": "IPV4",
                "security_group_ids": [],
                "subnet_id": "e2lovau8npu31d5jff8m"
              }
            ],
            "placement_policy": [
              {
                "host_affinity_rules": [],
                "placement_group_id": "",
                "placement_group_partition": 0
              }
            ],
            "platform_id": "standard-v1",
            "resources": [
              {
                "core_fraction": 100,
                "cores": 2,
                "gpus": 0,
                "memory": 6
              }
            ],
            "scheduling_policy": [
              {
                "preemptible": false
              }
            ],
            "secondary_disk": [],
            "service_account_id": "",
            "status": "running",
            "timeouts": null,
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_compute_instance",
      "name": "frontend",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "allow_recreate": null,
            "allow_stopping_for_update": null,
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "epd7ke6ulfmtp41ehbn9",
                "disk_id": "epd7ke6ulfmtp41ehbn9",
                "initialize_params": [
                  {
                    "block_size": 4096,
                    "description": "",
                    "image_id": "fd8hr27j6bkf6bd0tdsh",
                    "kms_key_id": "",
                    "name": "boot-disk-nginx1",
                    "size": 10,
                    "snapshot_id": "",
                    "type": "network-hdd"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "created_at": "2025-01-27T14:12:55Z",
            "description": "",
            "filesystem": [],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "fqdn": "nginx1.ru-central1.internal",
            "gpu_cluster_id": "",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "hostname": "nginx1",
            "id": "epd412fqosna5m7n67mi",
            "labels": null,
            "local_disk": [],
            "maintenance_grace_period": "",
            "maintenance_policy": null,
            "metadata": {
              "ssh-keys": "ubuntu:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsv6OblDNKcWCXVFwd7wFacShcXDYt/mqBrPConqp8f itbn@LearningMachine1\n"
            },
            "metadata_options": [
              {
                "aws_v1_http_endpoint": 1,
                "aws_v1_http_token": 2,
                "gce_http_endpoint": 1,
                "gce_http_token": 1
              }
            ],
            "name": "nginx1",
            "network_acceleration_type": "standard",
            "network_interface": [
              {
                "dns_record": [],
                "index": 0,
                "ip_address": "10.16.0.8",
                "ipv4": true,
                "ipv6": false,
                "ipv6_address": "",
                "ipv6_dns_record": [],
                "mac_address": "d0:0d:40:89:fa:c7",
                "nat": true,
                "nat_dns_record": [],
                "nat_ip_address": "84.201.152.105",
                "nat_ip_version": "IPV4",
                "security_group_ids": [],
                "subnet_id": "e2lovau8npu31d5jff8m"
              }
            ],
            "placement_policy": [
              {
                "host_affinity_rules": [],
                "placement_group_id": "",
                "placement_group_partition": 0
              }
            ],
            "platform_id": "standard-v1",
            "resources": [
              {
                "core_fraction": 100,
                "cores": 2,
                "gpus": 0,
                "memory": 2
              }
            ],
            "scheduling_policy": [
              {
                "preemptible": false
              }
            ],
            "secondary_disk": [],
            "service_account_id": "",
            "status": "running",
            "timeouts": null,
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_vpc_subnet.subnet01"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "allow_recreate": null,
            "allow_stopping_for_update": null,
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "epdqbika9iqq45n2joo1",
                "disk_id": "epdqbika9iqq45n2joo1",
                "initialize_params": [
                  {
                    "block_size": 4096,
                    "description": "",
                    "image_id": "fd8hr27j6bkf6bd0tdsh",
                    "kms_key_id": "",
                    "name": "boot-disk-nginx2",
                    "size": 10,
                    "snapshot_id": "",
                    "type": "network-hdd"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "created_at": "2025-01-27T14:12:54Z",
            "description": "",
            "filesystem": [],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "fqdn": "nginx2.ru-central1.internal",
            "gpu_cluster_id": "",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "hostname": "nginx2",
            "id": "epdkm20l5oj9su7pupdh",
            "labels": null,
            "local_disk": [],
            "maintenance_grace_period": "",
            "maintenance_policy": null,
            "metadata": {
              "ssh-keys": "ubuntu:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsv6OblDNKcWCXVFwd7wFacShcXDYt/mqBrPConqp8f itbn@LearningMachine1\n"
            },
            "metadata_options": [
              {
                "aws_v1_http_endpoint": 1,
                "aws_v1_http_token": 2,
                "gce_http_endpoint": 1,
                "gce_http_token": 1
              }
            ],
            "name": "nginx2",
            "network_acceleration_type": "standard",
            "network_interface": [
              {
                "dns_record": [],
                "index": 0,
                "ip_address": "10.16.0.6",
                "ipv4": true,
                "ipv6": false,
                "ipv6_address": "",
                "ipv6_dns_record": [],
                "mac_address": "d0:0d:14:b0:81:52",
                "nat": true,
                "nat_dns_record": [],
                "nat_ip_address": "158.160.91.236",
                "nat_ip_version": "IPV4",
                "security_group_ids": [],
                "subnet_id": "e2lovau8npu31d5jff8m"
              }
            ],
            "placement_policy": [
              {
                "host_affinity_rules": [],
                "placement_group_id": "",
                "placement_group_partition": 0
              }
            ],
            "platform_id": "standard-v1",
            "resources": [
              {
                "core_fraction": 100,
                "cores": 2,
                "gpus": 0,
                "memory": 2
              }
            ],
            "scheduling_policy": [
              {
                "preemptible": false
              }
            ],
            "secondary_disk": [],
            "service_account_id": "",
            "status": "running",
            "timeouts": null,
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_compute_instance",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow_recreate": null,
            "allow_stopping_for_update": null,
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "epdbom4jng5200avpne7",
                "disk_id": "epdbom4jng5200avpne7",
                "initialize_params": [
                  {
                    "block_size": 4096,
                    "description": "",
                    "image_id": "fd8hr27j6bkf6bd0tdsh",
                    "kms_key_id": "",
                    "name": "boot-disk-storage",
                    "size": 10,
                    "snapshot_id": "",
                    "type": "network-hdd"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "created_at": "2025-01-27T14:13:06Z",
            "description": "",
            "filesystem": [],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "fqdn": "storage.ru-central1.internal",
            "gpu_cluster_id": "",
            "hardware_generation": [
              {
                "generation2_features": [],
                "legacy_features": [
                  {
                    "pci_topology": "PCI_TOPOLOGY_V1"
                  }
                ]
              }
            ],
            "hostname": "storage",
            "id": "epds3ikdjdnc9d2oi1is",
            "labels": null,
            "local_disk": [],
            "maintenance_grace_period": "",
            "maintenance_policy": null,
            "metadata": {
              "ssh-keys": "ubuntu:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsv6OblDNKcWCXVFwd7wFacShcXDYt/mqBrPConqp8f itbn@LearningMachine1\n"
            },
            "metadata_options": [
              {
                "aws_v1_http_endpoint": 1,
                "aws_v1_http_token": 2,
                "gce_http_endpoint": 1,
                "gce_http_token": 1
              }
            ],
            "name": "storage",
            "network_acceleration_type": "standard",
            "network_interface": [
              {
                "dns_record": [],
                "index": 0,
                "ip_address": "10.16.0.17",
                "ipv4": true,
                "ipv6": false,
                "ipv6_address": "",
                "ipv6_dns_record": [],
                "mac_address": "d0:0d:1c:1c:a8:d9",
                "nat": true,
                "nat_dns_record": [],
                "nat_ip_address": "158.160.9.155",
                "nat_ip_version": "IPV4",
                "security_group_ids": [],
                "subnet_id": "e2lovau8npu31d5jff8m"
              }
            ],
            "placement_policy": [
              {
                "host_affinity_rules": [],
                "placement_group_id": "",
                "placement_group_partition": 0
              }
            ],
            "platform_id": "standard-v1",
            "resources": [
              {
                "core_fraction": 100,
                "cores": 2,
                "gpus": 0,
                "memory": 2
              }
            ],
            "scheduling_policy": [
              {
                "preemptible": false
              }
            ],
            "secondary_disk": [
              {
                "auto_delete": false,
                "device_name": "shared_disk",
                "disk_id": "epdm56ui46fqh0gg6kr5",
                "mode": "READ_WRITE"
              }
            ],
            "service_account_id": "",
            "status": "running",
            "timeouts": null,
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_compute_disk.shared_disk",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_lb_network_load_balancer",
      "name": "frontend-load-balancer",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "attached_target_group": [
              {
                "healthcheck": [
                  {
                    "healthy_threshold": 2,
                    "http_options": [
                      {
                        "path": "/",
                        "port": 80
                      }
                    ],
                    "interval": 2,
                    "name": "http",
                    "tcp_options": [],
                    "timeout": 1,
                    "unhealthy_threshold": 2
                  }
                ],
                "target_group_id": "enppm8ev4e0dkg35qsrn"
              }
            ],
            "created_at": "2025-01-27T14:13:36Z",
            "deletion_protection": false,
            "description": "",
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "id": "enpk72rlb82vjlpohhn0",
            "labels": null,
            "listener": [
              {
                "external_address_spec": [
                  {
                    "address": "130.193.59.40",
                    "ip_version": "ipv4"
                  }
                ],
                "internal_address_spec": [],
                "name": "http-listener",
                "port": 80,
                "protocol": "tcp",
                "target_port": 80
              }
            ],
            "name": "frontend-load-balancer",
            "region_id": "ru-central1",
            "timeouts": null,
            "type": "external"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_compute_instance.frontend",
            "yandex_lb_target_group.frontend-target-group",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_lb_target_group",
      "name": "frontend-target-group",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2025-01-27T14:13:35Z",
            "description": "",
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "id": "enppm8ev4e0dkg35qsrn",
            "labels": null,
            "name": "frontend-target-group",
            "region_id": "ru-central1",
            "target": [
              {
                "address": "10.16.0.6",
                "subnet_id": "e2lovau8npu31d5jff8m"
              },
              {
                "address": "10.16.0.8",
                "subnet_id": "e2lovau8npu31d5jff8m"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.yandex_compute_image.ubuntu2404",
            "data.yandex_vpc_network.default",
            "yandex_compute_instance.frontend",
            "yandex_vpc_subnet.subnet01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_vpc_subnet",
      "name": "subnet01",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2025-01-27T14:12:53Z",
            "description": "",
            "dhcp_options": [],
            "folder_id": "b1ghnhdkga964vm8vfu6",
            "id": "e2lovau8npu31d5jff8m",
            "labels": {},
            "name": "subnet01",
            "network_id": "enp014etv9tm4bcju6bq",
            "route_table_id": "",
            "timeouts": null,
            "v4_cidr_blocks": [
              "10.16.0.0/24"
            ],
            "v6_cidr_blocks": [],
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwLCJ1cGRhdGUiOjE4MDAwMDAwMDAwMH19",
          "dependencies": [
            "data.yandex_vpc_network.default"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
